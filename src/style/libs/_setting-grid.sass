/* Media queries breakpoints */
$screen-c: 320px;
$screen-xs: 480px;
$screen-sm: 768px;
$screen-md: 960px;
$screen-lg: 1100px;
$screen-full: 1920px;
$screen-more_full: 1921px;
// Custom, iPhone Retina

/* grid system*/
$grid-columns:                                       12 !default
$grid-gutter-width:                                30px !default


// Creates a wrapper for a series of columns
@mixin make-row($gutter: $grid-gutter-width)
    margin-left:  ceil(($gutter / -2))
    margin-right: floor(($gutter / -2))
    @include clearfix

// Generate the custom columns
@mixin make-c-column($columns, $gutter: $grid-gutter-width)
    position: relative
    float: left
    width: percentage(($columns / $grid-columns))
    min-height: 1px
    padding-left:  ($gutter / 2)
    padding-right: ($gutter / 2)
@mixin make-c-column-offset($columns)
    margin-left: percentage(($columns / $grid-columns))
@mixin make-c-column-push($columns)
    left: percentage(($columns / $grid-columns))
@mixin make-c-column-pull($columns)
    right: percentage(($columns / $grid-columns))

// Generate the extra small columns
@mixin make-xs-column($columns, $gutter: $grid-gutter-width)
    position: relative
    float: left
    width: percentage(($columns / $grid-columns))
    min-height: 1px
    padding-left:  ($gutter / 2)
    padding-right: ($gutter / 2)
@mixin make-xs-column-offset($columns)
    margin-left: percentage(($columns / $grid-columns))
@mixin make-xs-column-push($columns)
    left: percentage(($columns / $grid-columns))
@mixin make-xs-column-pull($columns)
    right: percentage(($columns / $grid-columns))

// Generate the extra small columns
@mixin make-xs-column($columns, $gutter: $grid-gutter-width)
    position: relative
    min-height: 1px
    padding-left:  ($gutter / 2)
    padding-right: ($gutter / 2)

    @media (min-width: $screen-xs)
        float: left
        width: percentage(($columns / $grid-columns))

@mixin make-xs-column-offset($columns)
    @media (min-width: $screen-xs)
        margin-left: percentage(($columns / $grid-columns))

@mixin make-xs-column-push($columns)
    @media (min-width: $screen-xs)
        left: percentage(($columns / $grid-columns))

@mixin make-xs-column-pull($columns)
    @media (min-width: $screen-xs)
        right: percentage(($columns / $grid-columns))

// Generate the small columns
@mixin make-sm-column($columns, $gutter: $grid-gutter-width)
    position: relative
    min-height: 1px
    padding-left:  ($gutter / 2)
    padding-right: ($gutter / 2)

    @media (min-width: $screen-sm)
        float: left
        width: percentage(($columns / $grid-columns))

@mixin make-md-column-width($columns)
    @media (min-width: $screen-md)
        margin-left: percentage(($columns / $grid-columns))

@mixin make-sm-column-offset($columns)
    @media (min-width: $screen-sm)
        margin-left: percentage(($columns / $grid-columns))

@mixin make-sm-column-push($columns)
    @media (min-width: $screen-sm)
        left: percentage(($columns / $grid-columns))

@mixin make-sm-column-pull($columns)
    @media (min-width: $screen-sm)
        right: percentage(($columns / $grid-columns))

// Generate the medium columns
@mixin make-md-column($columns, $gutter: $grid-gutter-width)
    position: relative
    min-height: 1px
    padding-left:  ($gutter / 2)
    padding-right: ($gutter / 2)

    @media (min-width: $screen-md)
        float: left
        width: percentage(($columns / $grid-columns))

@mixin make-md-column-width($columns)
    @media (min-width: $screen-md)
        margin-left: percentage(($columns / $grid-columns))

@mixin make-md-column-offset($columns)
    @media (min-width: $screen-md)
        margin-left: percentage(($columns / $grid-columns))

@mixin make-md-column-push($columns)
    @media (min-width: $screen-md)
        left: percentage(($columns / $grid-columns))

@mixin make-md-column-pull($columns)
    @media (min-width: $screen-md)
        right: percentage(($columns / $grid-columns))

// Generate the large columns
@mixin make-lg-column($columns, $gutter: $grid-gutter-width)
    position: relative
    min-height: 1px
    padding-left:  ($gutter / 2)
    padding-right: ($gutter / 2)

    @media (min-width: $screen-lg)
        float: left
        width: percentage(($columns / $grid-columns))

@mixin make-md-column-width($columns)
    @media (min-width: $screen-md)
        margin-left: percentage(($columns / $grid-columns))

@mixin make-lg-column-offset($columns)
    @media (min-width: $screen-lg)
        margin-left: percentage(($columns / $grid-columns))

@mixin make-lg-column-push($columns)
    @media (min-width: $screen-lg)
        left: percentage(($columns / $grid-columns))

@mixin make-lg-column-pull($columns)
    @media (min-width: $screen-lg)
        right: percentage(($columns / $grid-columns))

@mixin make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}")
    @for $i from (1 + 1) through $grid-columns
        $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}"
    #{$list}
        position: relative
        min-height: 1px
        padding-left:  ceil(($grid-gutter-width / 2))
        padding-right: floor(($grid-gutter-width / 2))

@mixin float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}")
    @for $i from (1 + 1) through $grid-columns
        $list: "#{$list}, .col-#{$class}-#{$i}"
    #{$list}
        float: left

@mixin calc-grid-column($index, $class, $type)
    @if ($type == width) and ($index > 0)
        .col-#{$class}-#{$index}
            width: percentage(($index / $grid-columns))

    @if ($type == push) and ($index > 0)
        .col-#{$class}-push-#{$index}
            left: percentage(($index / $grid-columns))

    @if ($type == push) and ($index == 0)
        .col-#{$class}-push-0
            left: auto

    @if ($type == pull) and ($index > 0)
        .col-#{$class}-pull-#{$index}
            right: percentage(($index / $grid-columns))

    @if ($type == pull) and ($index == 0)
        .col-#{$class}-pull-0
            right: auto

    @if ($type == offset)
        .col-#{$class}-offset-#{$index}
            margin-left: percentage(($index / $grid-columns))

@mixin loop-grid-columns($columns, $class, $type)
    @for $i from 0 through $columns
        @include calc-grid-column($i, $class, $type)

// Create grid for specific class
@mixin make-grid($class)
    @include float-grid-columns($class)
    @include loop-grid-columns($grid-columns, $class, width)
    @include loop-grid-columns($grid-columns, $class, pull)
    @include loop-grid-columns($grid-columns, $class, push)
    @include loop-grid-columns($grid-columns, $class, offset)


// Row
//
// Rows contain and clear the floats of your columns.
.row
    @include make-row

// Columns
//
// Common styles for small and large grid columns

@include make-grid-columns

// Exstra small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: $screen-xs)
    @include make-grid(xs)

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.
@media (min-width: $screen-sm)
    @include make-grid(sm)

// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.
@media (min-width: $screen-md)
    @include make-grid(md)

// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.
@media (min-width: $screen-lg)
    @include make-grid(lg)
[class*="col"]
    box-sizing: border-box
