// mixin
// mixin clearfix
@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
        zoom: 1;
    }
}

// @include clearfix;
// mixin Respond-to
@mixin respond-to($media) {
    // 1920px
    @if $media==more_full {
        @media only screen and (min-width: #{$screen-more_full}) {
            @content;
        }
    }
    @else if $media==full {
        @media only screen and (max-width: #{$screen-full}) {
            @content;
        }
    }
    //1200px
    @else if $media==pc {
        @media only screen and (max-width: #{$screen-lg}) {
            @content;
        }
    } // 990px
    @else if $media==tablets {
        @media only screen and (max-width: #{$screen-md}) {
            @content;
        }
    } // 800px
    @else if $media==wide_handhelds {
        @media only screen and (max-width: #{$screen-sm}) {
            @content;
        }
    } // 480px
    @else if $media==handhelds {
        @media only screen and (max-width: #{$screen-xs}) {
            @content;
        }
    } // 320px
    @else if $media==fon {
        @media only screen and (max-width: #{$screen-c}) {
            @content;
        }
    } // for retina display
    @else if $media==retina {
        @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 144dpi) {
            @content;
        }
    }
}

// @include respond-to(fon) { border: none; }
// Создаем mixin для центрирования
@mixin center($horizontal: true, $vertical: true) {
    position: absolute;
    @if ($horizontal and $vertical) {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    @else if ($horizontal) {
        left: 50%;
        transform: translate(-50%, 0);
    }
    @else if ($vertical) {
        top: 50%;
        transform: translate(0, -50%);
    }
}

// @include center(true, true);
//mixin  reset-buton
@mixin reset-btn() {
    border: none;
    outline: none;
    margin: 0;
    cursor: pointer;
}

// @include reset-btn;
//mixin calculateRem
@function calculateRem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}

@mixin fs($size) {
    @if ($size > 16) {
        font-size: $size;
        font-size: calculateRem($size);
    }
    @else if {
        font-size: $size;
    }
}
// p { @include fs(36px);}


//mixin calculate em --- px
$browser-context: 16;
@function em($pixels, $context: $browser-context) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }
    @if (unitless($context)) {
        $context: $context * 1px;
    }
    @return $pixels / $context * 1em;
}

//h1 { font-size: em(32); }

//mixin size
@mixin siz($width, $height: $width) {
  width: $width;
  height: $height;
}
// p { @include size(36px);}

//Отзывчивое соотношение
@mixin responsive-ratio($x,$y, $pseudo: false) {
  $padding: unquote( ( $y / $x ) * 100 + '%' );
  @if $pseudo {
   &:before {
    @include pseudo($pos: relative);
    width: 100%;
    padding-top: $padding;
   }
  } @else {
   padding-top: $padding;
  }
}
//div {@include responsive-ratio(16,9);}

//placeholder mix
@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}
//input,textarea {
//  @include input-placeholder {color: $grey;}}

// z-index mixin
@function z($name) {
  @if index($z-indexes, $name) {
   @return (length($z-indexes) - index($z-indexes, $name)) + 1;
  } @else {
   @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
   @return null;
  }
};
$z-indexes: (
  "outdated-browser",
  "modal",
  "site-header",
  "page-wrapper",
  "site-footer"
);
.site-header {

  z-index: z('site-header');

}